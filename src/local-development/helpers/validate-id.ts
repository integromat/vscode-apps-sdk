import { AppComponentType, AppGeneralType } from '../../types/app-component-type.types';

const ruleRpcModule = {
	// Local ID must match the format requirements at Make.
	//   Reason: If remote component not exists yet, the "Deploy to Make" action tries to create it with same component name as local ID.
	hint: '3-48 letters and numbers (a-z, A-Z, 0-9). Must start with a letter.',
	regexp: /^[a-zA-Z][0-9a-zA-Z]{2,47}$/,
	examples: 'getSomething, listSomething, updateSomething',
};
const ruleWebhookConnection = {
	// Note: Remote name is generated automatically in format `(appName)(index)?` and not need to match with local ID.
	//       No need to limit the local ID, so no need to be strict, but code files will contain choosed local ID,
	//       so we blocks weird symbols and spaces that can be incompatible/problematic in for filesystem.
	regexp: /^[a-zA-Z][0-9a-zA-Z-]{1,33}[0-9a-zA-Z]$/,
	hint: '3-35 letters and numbers (a-z, A-Z, 0-9, dash "-"). Must start with a letter, not end with a dash. Used for local components only, because it is autogenerated in Make.',
};

export const COMPONENT_ID_VALIDATION_RULES: Record<
	AppComponentType | AppGeneralType,
	{ regexp: RegExp; hint: string; examples: string }
> = {
	app: {
		// Matches with remote Make rules
		regexp: /^[a-z][0-9a-z-]{1,28}[0-9a-z]$/,
		hint: '3-30 letters and numbers (a-z, A-Z, 0-9, dash "-"). Must start with a lowercase letter.',
		examples: 'home-assistant, html-tools',
	},
	rpc: ruleRpcModule,
	module: ruleRpcModule,
	function: {
		// Local ID must match the format requirements at Make.
		//   Reason: If remote component not exists yet, the "Deploy to Make" action tries to create it with same component name as local ID.
		regexp: /^[a-zA-Z][0-9a-zA-Z]{1,94}[0-9a-zA-Z]$/,
		hint: '3-96 letters and numbers (a-z, A-Z, 0-9). Must start with a letter',
		examples: 'getSomething, listSomething, updateSomething',
	},
	webhook: {
		...ruleWebhookConnection,
		examples: 'getLog, saveData',
	},
	connection: {
		...ruleWebhookConnection,
		examples: 'tokenAuth, oAuth',
	},
};

/**
 * Tests if the ID (name) has the correct format aligned with Make rules.
 */
export function isComponentLocalIdValid(componentType: AppComponentType | AppGeneralType, id: string): boolean {
	return COMPONENT_ID_VALIDATION_RULES[componentType].regexp.test(id);
}
