{
	"$schema": "http://json-schema.org/draft-07/schema#",
	"definitions": {
		"type": {
			"description": "This directive specifies how to parse the data received from the server.",
			"$id": "#type",
			"oneOf": [
				{
					"type": "object",
					"patternProperties": {
						"^(\\*|[0-9][0-9][0-9]\\-[0-9][0-9][0-9]|[0-9][0-9][0-9])$": {
							"$ref": "enums.json#/definitions/response-type"
						}
					},
					"additionalProperties": false
				},
				{
					"$ref": "enums.json#/definitions/response-type"
				}
			]
		},
		"valid": {
			"description": "This directive lets you decide if the response returned by a service is valid or not.",
			"$id": "#valid",
			"oneOf": [
				{
					"type": ["boolean", "string"]
				},
				{
					"type": "object",
					"properties": {
						"condition": {
							"type": "string"
						},
						"message": {
							"type": "string"
						},
						"type": {
							"type": "string"
						}
					},
					"additionalProperties": false
				}
			],
			"default": true
		},
		"limit": {
			"$id": "#limit",
			"description": "This directive specifies the maximum items that will be returned by the module.",
			"type": ["number", "string"]
		},
		"error": {
			"description": "The error directive specifies the error type and the error message to show the user.",
			"$id": "#error",
			"oneOf": [
				{
					"type": "string",
					"maxLength": 1024
				},
				{
					"type": "object",
					"properties": {
						"message": {
							"description": "An expression that parses an error message from response body.",
							"type": "string",
							"maxLength": 1024
						},
						"type": {
							"description": "An expression that specifies the error type.",
							"$ref": "enums.json#/definitions/error-type"
						}
					},
					"patternProperties": {
						"^([0-9][0-9][0-9])$": {
							"description": "You are able to specify custom errors for different status codes by specifying the status code as the key in the error directive object, and using the same error specification as a value.",
							"type": "object",
							"properties": {
								"message": {
									"description": "An expression that parses an error message from response body.",
									"type": "string",
									"maxLength": 1024
								},
								"type": {
									"description": "An expression that specifies the error type.",
									"$ref": "enums.json#/definitions/error-type"
								}
							},
							"required": ["message"],
							"additionalProperties": false
						}
					},
					"required": ["message"],
					"additionalProperties": false
				}
			]
		},
		"iterate": {
			"$id": "#iterate",
			"description": "This directive specifies the container of an array of items that the module must process and output.",
			"oneOf": [
				{
					"type": "string",
					"maxLength": 512
				},
				{
					"type": "object",
					"properties": {
						"container": {
							"description": "Specifies the array with the data you want to process.",
							"type": "string",
							"maxLength": 512
						},
						"condition": {
							"description": "Specifies a filter that can be used to filter out unwanted items.",
							"type": ["string", "boolean"]
						}
					},
					"required": ["container"],
					"additionalProperties": false
				}
			]
		},
		"epoch-output": {
			"description": "With the output directive you can specify how you want your module output to look.",
			"$id": "#epoch-output",
			"type": "object",
			"required": ["date", "label"]
		},
		"output": {
			"description": "With the output directive you can specify how you want your module output to look.",
			"$id": "#output",
			"type": ["object", "array", "boolean", "integer", "null", "number", "string"]
		},
		"trigger": {
			"description": "The trigger collection specifies directives that will control how the trigger will work and how your data will be processed.",
			"$id": "#trigger",
			"type": "object",
			"properties": {
				"type": {
					"oneOf": [
						{
							"description": "Specifies how the trigger will behave and sort items.",
							"type": "string",
							"enum": ["date", "id"]
						},
						{
							"$ref": "sources.json#/definitions/stringWithIml"
						}
					]
				},
				"order": {
					"oneOf": [
						{
							"description": "Specifies in what order the remote API returns items.",
							"type": "string",
							"enum": ["asc", "desc", "unordered"]
						},
						{
							"$ref": "sources.json#/definitions/stringWithIml"
						}
					]
				},
				"id": {
					"description": "Must return current item’s Id.",
					"type": "string",
					"maxLength": 512
				},
				"date": {
					"description": "When used, must return current item’s create/update timestamp.",
					"type": "string",
					"maxLength": 512
				}
			},
			"required": ["type", "order", "id"],
			"if": {
				"required": ["type"],
				"properties": {
					"type": {
						"enum": ["date"]
					}
				}
			},
			"then": {
				"required": ["date"]
			},
			"additionalProperties": false
		},
		"data": {
			"$id": "#data",
			"type": "object",
			"description": "The data directive saves data to the connection so that it can be later accessed from a module through the connection variable.",
			"additionalProperties": true
		},
		"metadata": {
			"description": "The metadata directive allows you to save user’s name or username (or any other text field) so that multiple connections of the same type could be easily recognized.",
			"$id": "#metadata",
			"type": "object",
			"properties": {
				"value": {
					"type": "string",
					"maxLength": 512
				},
				"type": {
					"oneOf": [
						{
							"type": "string",
							"enum": ["text", "email"]
						},
						{
							"$ref": "sources.json#/definitions/stringWithIml"
						}
					]
				}
			},
			"additionalProperties": true
		},
		"uid": {
			"description": "This directive allows you to save the user’s remote service Id. This is required when using Shared Webhooks.",
			"$id": "#uid",
			"type": ["string", "number"]
		},
		"wrapper": {
			"$id": "#wrapper",
			"type": ["object", "array", "boolean", "integer", "null", "number", "string"],
			"default": "{{output}}",
			"description": "This directive lets you post process module output before returning it to the user. The output of the module will be available to you as the output context variable - the result of processing the output directive."
		},
		"verification": {
			"$id": "#verification",
			"type": "object",
			"additionalProperties": false,
			"properties": {
				"condition": {
					"$ref": "sources.json#/definitions/condition"
				},
				"respond": {
					"$ref": "response.json#/definitions/respond"
				}
			}
		},
		"respond": {
			"$id": "#respond",
			"type": "object",
			"additionalProperties": false,
			"properties": {
				"type": {
					"$ref": "enums.json#/definitions/respond-type"
				},
				"status": {
					"oneOf": [
						{
							"type": "integer",
							"maximum": 999,
							"minimum": 100
						},
						{
							"type": "string"
						}
					],
					"description": "Specifies the response status code."
				},
				"headers": {
					"$ref": "sources.json#/definitions/headers"
				},
				"body": {
					"$ref": "sources.json#/definitions/body"
				}
			}
		},
		"expires": {
			"$id": "#expires",
			"type": "string",
			"minLength": 1,
			"maxLength": 512,
			"description": "When the current time is greater than the key's expiration, the refreshment process will be called, if available."
		}
	}
}
