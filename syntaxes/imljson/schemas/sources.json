{
	"$schema": "http://json-schema.org/draft-07/schema#",
	"definitions": {
		"plainString512": {
			"$id": "#plainString512",
			"type": "string",
			"maxLength": 512,
			"minLength": 1
		},
		"stringWithIml": {
			"$id": "#stringWithIml",
			"type": "string",
			"pattern": "^.*[{][{].*[}][}].*$"
		},
		"temp": {
			"$id": "#temp",
			"type": "object",
			"description": "The temp directive specifies an object, which can be used to create custom temporary variables. It also creates a temp variable in IML, through which you then access your variables. The temp collection is not persisted and will be lost after the module is done executing.",
			"additionalProperties": true
		},
		"headers": {
			"$id": "#headers",
			"type": "object",
			"patternProperties": {
				"^.+$": {
					"type": ["boolean", "integer", "null", "number", "string", "array"]
				}
			},
			"additionalProperties": false,
			"description": "This directive specifies headers that will be sent with the request."
		},
		"qs": {
			"$id": "#qs",
			"type": "object",
			"patternProperties": {
				"^.+$": {
					"type": ["boolean", "integer", "null", "number", "string", "array"]
				}
			},
			"additionalProperties": false,
			"description": "This directive specifies the query string to use when making the request."
		},
		"url": {
			"$id": "#url",
			"type": "string",
			"minLength": 1,
			"maxLength": 512,
			"description": "This directive specifies the request URL."
		},
		"baseUrl": {
			"$id": "#baseUrl",
			"type": "string",
			"minLength": 1,
			"maxLength": 512,
			"description": "If you want to use this base URL in a request, you need to start the URL of an endpoint with `/` character."
		},
		"method": {
			"oneOf": [
				{
					"$id": "#method",
					"type": "string",
					"default": "GET",
					"enum": ["GET", "POST", "PUT", "PATCH", "DELETE"],
					"description": "This directive specifies the HTTP method that will be used to issue the request."
				},
				{
					"$ref": "sources.json#/definitions/stringWithIml"
				}
			]
		},
		"body": {
			"$id": "#body",
			"type": ["object", "array", "boolean", "integer", "null", "number", "string"],
			"description": "This directive specifies the request body."
		},
		"oauth-1": {
			"$id": "#oauth-1",
			"type": "object",
			"description": "Helper directive, that will simplify generating an OAuth1 Authorization headers.",
			"additionalProperties": false,
			"properties": {
				"consumer_key": {
					"description": "Your consumer key.",
					"type": "string",
					"maxLength": 512
				},
				"consumer_secret": {
					"description": "Your consumer secret.",
					"type": "string",
					"maxLength": 512
				},
				"private_key": {
					"description": "Instead of consumer_secret you can specify a private_key string in PEM format.",
					"type": "string",
					"maxLength": 512
				},
				"token": {
					"description": "An expression that parses the oauth_token string.",
					"type": "string",
					"maxLength": 512
				},
				"token_secret": {
					"description": "An expression that parses the oauth_token_secret string.",
					"type": "string",
					"maxLength": 512
				},
				"verifier": {
					"description": "An expression that parses the oauth_verifier string.",
					"type": "string",
					"maxLength": 512
				},
				"signature_method": {
					"oneOf": [
						{
							"description": "Specifies the desired method to use when calculating the signature.",
							"type": "string",
							"enum": ["HMAC-SHA1", "RSA-SHA1", "PLAINTEXT"],
							"default": "HMAC-SHA1"
						},
						{
							"$ref": "sources.json#/definitions/stringWithIml"
						}
					]
				},
				"transport_method": {
					"oneOf": [
						{
							"description": "Specifies how OAuth parameters are sent: via query params, header or in a POST body.",
							"type": "string",
							"enum": ["query", "body", "header"],
							"default": "header"
						},
						{
							"$ref": "sources.json#/definitions/stringWithIml"
						}
					]
				},
				"body_hash": {
					"description": "To use Request Body Hash, you can either manually generate it, or you can set this directive to true and the body hash will be generated automatically.",
					"type": ["string", "boolean"],
					"default": true
				}
			}
		},
		"encodeUrl": {
			"$id": "#encodeUrl",
			"type": "boolean",
			"default": true,
			"description": "This directive controls the encoding of URLs. It is on by default, so if you have any special characters in your URL, they will be automatically encoded. But there might be situations where you don’t want your URL to be encoded automatically, or you want to control what parts of the URL are encoded. To do this, set this flag to false."
		},
		"ca": {
			"$id": "#ca",
			"type": "string",
			"description": "Custom Certificate Authority",
			"maxLength": 8192
		},
		"condition": {
			"$id": "#condition",
			"default": true,
			"description": "This directive specifies whether to execute the request or not.",
			"oneOf": [
				{
					"type": ["boolean", "string"]
				},
				{
					"type": "object",
					"properties": {
						"condition": {
							"description": "Specifies if to execute the request or not.",
							"type": ["boolean", "string"]
						},
						"default": {
							"description": "Specifies the module output when the condition is false.",
							"type": ["array", "boolean", "integer", "null", "number", "object", "string"]
						}
					},
					"additionalProperties": false
				}
			]
		},
		"gzip": {
			"$id": "#gzip",
			"type": "boolean",
			"default": "false",
			"description": "Add an Accept-Encoding header to request compressed content encodings from the server (if not already present) and decode supported content encodings in the response."
		},
		"aws": {
			"$id": "#aws",
			"description": "Helper directive, that will simplify generating AWS signatures.",
			"type": "object",
			"properties": {
				"key": {
					"description": "AWS key",
					"type": "string",
					"maxLength": 512
				},
				"secret": {
					"description": "AWS secret",
					"type": "string",
					"maxLength": 512
				},
				"session": {
					"description": "AWS session. Note that this only works for services that require session as part of the canonical string.",
					"type": "string",
					"maxLength": 512
				},
				"bucket": {
					"description": "AWS bucket, unless you’re specifying your bucket as part of the path, or the request doesn’t use a bucket.",
					"type": "string",
					"maxLength": 512
				},
				"sign_version": {
					"oneOf": [
						{
							"description": "AWS sign version",
							"type": "string",
							"default": "2",
							"enum": ["2", "4"]
						},
						{
							"$ref": "sources.json#/definitions/stringWithIml"
						}
					]
				}
			},
			"additionalProperties": false
		},
		"followRedirects": {
			"$id": "#followRedirects",
			"description": "This directive specifies whether to follow GET HTTP 3xx responses as redirects or never.",
			"type": "boolean",
			"default": true
		},
		"followAllRedirects": {
			"$id": "#followAllRedirects",
			"description": "This directive specifies whether to follow non-GET HTTP 3xx responses as redirects or never.",
			"type": "boolean",
			"default": true
		},
		"log": {
			"$id": "#log",
			"description": "This directive specifies logging options for both the request and the response.",
			"type": "object",
			"additionalProperties": false,
			"properties": {
				"sanitize": {
					"description": "An array of paths to sanitize when logging request or response.",
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"pagination": {
			"$id": "#pagination",
			"description": "Directive to specify how to process paginated responses.",
			"type": "object",
			"additionalProperties": false,
			"properties": {
				"mergeWithParent": {
					"description": "This directive specifies if to merge pagination parameters with the original request parameters, or not.",
					"type": "boolean",
					"default": true
				},
				"url": {
					"description": "This directive specifies the URL that will be called when the pagination request is executed.",
					"$ref": "sources.json#/definitions/url"
				},
				"method": {
					"description": "This directive specifies the HTTP method to be used when executing the pagination request.",
					"$ref": "sources.json#/definitions/method"
				},
				"headers": {
					"description": "This directive specifies the request headers to be used when executing the pagination request.",
					"$ref": "sources.json#/definitions/headers"
				},
				"qs": {
					"description": "This directive specifies the request query string parameters to be used when executing the pagination request.",
					"$ref": "sources.json#/definitions/qs"
				},
				"body": {
					"description": "This directive specifies the request body when the request method is anything but GET to be used when executing the pagination request.",
					"$ref": "sources.json#/definitions/body"
				},
				"condition": {
					"description": "This directive specifies whether to execute the pagination request or not.",
					"type": ["boolean", "string"]
				}
			}
		},
		"repeat": {
			"$id": "#repeat",
			"description": "Repeats a request under a certain condition with a predefined delay in milliseconds. The maximum number of repeats can be bounded by the repeat.limit.",
			"type": "object",
			"properties": {
				"condition": {
					"description": "Specifies if to execute the request or not.",
					"type": "string"
				},
				"delay": {
					"description": "Specifies the delay in miliseconds.",
					"type": "number"
				},
				"limit": {
					"description": "Specifies the maximum number of iterations.",
					"type": "number"
				}
			}
		}
	}
}
